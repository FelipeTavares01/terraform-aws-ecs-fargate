module "networking" {
  source                     = "./networking"
  vpc_id                     = var.vpc_id
  sg_alb_name                = var.sg_alb_name
  sg_alb_description         = var.sg_alb_description
  sg_alb_ingress_description = var.sg_alb_ingress_description
  sg_alb_ingress_from_port   = var.sg_alb_ingress_from_port
  sg_alb_ingress_to_port     = var.sg_alb_ingress_to_port
  sg_alb_ingress_protocol    = var.sg_alb_ingress_protocol
  sg_alb_ingress_cidr_blocks = var.sg_alb_ingress_cidr_blocks
  sg_alb_egress_description  = var.sg_alb_egress_description
  sg_alb_egress_from_port    = var.sg_alb_egress_from_port
  sg_alb_egress_to_port      = var.sg_alb_egress_to_port
  sg_alb_egress_protocol     = var.sg_alb_egress_protocol
  sg_alb_egress_cidr_blocks  = var.sg_alb_egress_cidr_blocks
  sg_ecs_name                = var.sg_ecs_name
  sg_ecs_description         = var.sg_ecs_description
  sg_ecs_ingress_description = var.sg_ecs_ingress_description
  sg_ecs_ingress_from_port   = var.sg_ecs_ingress_from_port
  sg_ecs_ingress_to_port     = var.sg_ecs_ingress_to_port
  sg_ecs_ingress_protocol    = var.sg_ecs_ingress_protocol
  sg_ecs_egress_description  = var.sg_ecs_egress_description
  sg_ecs_egress_from_port    = var.sg_ecs_egress_from_port
  sg_ecs_egress_to_port      = var.sg_ecs_egress_to_port
  sg_ecs_egress_protocol     = var.sg_ecs_egress_protocol
  sg_ecs_egress_cidr_blocks  = var.sg_ecs_egress_cidr_blocks
}

module "loadbalancer" {
  source                   = "./loadbalancing"
  alb_name                 = var.alb_name
  alb_is_internal          = var.alb_is_internal
  security_groups          = [module.networking.security_group_alb_id]
  subnets                  = var.subnets
  alb_idle_timeout         = var.alb_idle_timeout
  environment              = var.environment
  tg_name                  = var.tg_name
  tg_port                  = var.tg_port
  tg_protocol              = var.tg_protocol
  vpc_id                   = var.vpc_id
  tg_type                  = var.tg_type
  tg_deregistration_delay  = var.tg_deregistration_delay
  tg_healthy_threshold     = var.tg_healthy_threshold
  tg_unhealthy_threshold   = var.tg_unhealthy_threshold
  tg_health_check_interval = var.tg_health_check_interval
  tg_health_check_path     = var.tg_health_check_path
  tg_health_check_port     = var.tg_health_check_port
  tg_health_check_protocol = var.tg_health_check_protocol
  tg_health_check_timeout  = var.tg_health_check_timeout
  alb_listener_port        = var.alb_listener_port
  alb_listener_protocol    = var.alb_listener_protocol
  alb_listener_type        = var.alb_listener_type
}

module "asg" {
  source                        = "./asg"
  asg_max_size                  = var.asg_max_size
  asg_min_size                  = var.asg_min_size
  ecs_cluster_name              = var.ecs_cluster_name
  ecs_service_name              = var.ecs_service_name
  asg_policy_name               = var.ecs_service_name
  asg_target_cpu_value          = var.asg_target_cpu_value
  asg_scale_in_cooldown_cpu     = var.asg_scale_in_cooldown_cpu
  asg_scale_out_cooldown_cpu    = var.asg_scale_out_cooldown_cpu
  asg_target_memory_value       = var.asg_target_memory_value
  asg_scale_in_cooldown_memory  = var.asg_scale_in_cooldown_memory
  asg_scale_out_cooldown_memory = var.asg_scale_out_cooldown_memory
}

module "ecs" {
  source                                = "./ecs"
  depends_on                            = [module.loadbalancer]
  ecs_cluster_name                      = var.ecs_cluster_name
  ecs_capacity_providers                = var.ecs_capacity_providers
  ecs_family_name                       = var.ecs_family_name
  ecs_launch_type                       = var.ecs_launch_type
  ecs_task_role_arn                     = var.ecs_task_role_arn
  ecs_execution_role_arn                = var.ecs_execution_role_arn
  ecs_task_cpu                          = var.ecs_task_cpu
  ecs_task_memory                       = var.ecs_task_memory
  ecs_container_name                    = var.ecs_container_name
  ecs_container_image                   = var.ecs_container_image
  ecs_container_cpu                     = var.ecs_container_cpu
  ecs_container_memory                  = var.ecs_container_memory
  ecs_container_port                    = var.ecs_container_port
  ecs_service_name                      = var.ecs_service_name
  sg_ecs_service                        = module.networking.security_group_ecs_id
  ecs_desired_count                     = var.ecs_desired_count
  ecs_deployment_min_healthy_percent    = var.ecs_deployment_min_healthy_percent
  ecs_health_check_grace_period_seconds = var.ecs_health_check_grace_period_seconds
  subnets                               = var.subnets
  target_group_arn                      = module.loadbalancer.tg_arn
}